{"componentChunkName":"component---src-blog-template-blog-template-js","path":"/markdown/test","result":{"data":{"markdownRemark":{"html":"<h1>README</h1>\n<p>该文件用来测试和展示书写README的各种markdown语法。GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为<code class=\"language-text\">GitHub Flavored Markdown</code>。简称<code class=\"language-text\">GFM</code>，GFM在GitHub上有广泛应用，除了README文件外，issues和wiki均支持markdown语法。</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>Author</th>\n<th>果冻虾仁</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>E-mail</td>\n<td>Jelly.K.Wang@qq.com</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>目录</h2>\n<ul>\n<li><a href=\"#%E6%A8%AA%E7%BA%BF\">横线</a></li>\n<li><a href=\"#%E6%A0%87%E9%A2%98\">标题</a></li>\n<li>\n<p><a href=\"#%E6%96%87%E6%9C%AC\">文本</a></p>\n<ul>\n<li>普通文本</li>\n<li>单行文本</li>\n<li>多行文本</li>\n<li>文字高亮</li>\n<li>换行</li>\n<li>斜体</li>\n<li>粗体</li>\n<li>删除线</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%9B%BE%E7%89%87\">图片</a></p>\n<ul>\n<li>来源于网络的图片</li>\n<li>GitHub仓库中的图片</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E9%93%BE%E6%8E%A5\">链接</a> </p>\n<ul>\n<li>\n<p>文字超链接</p>\n<ul>\n<li>链接外部URL</li>\n<li>链接本仓库里的URL</li>\n</ul>\n</li>\n<li>锚点</li>\n<li><a href=\"#%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5\">图片链接</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%88%97%E8%A1%A8\">列表</a></p>\n<ul>\n<li>无序列表</li>\n<li>有序列表</li>\n<li>复选框列表</li>\n</ul>\n</li>\n<li><a href=\"#%E5%9D%97%E5%BC%95%E7%94%A8\">块引用</a></li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE\">代码高亮</a></li>\n<li><a href=\"#%E8%A1%A8%E6%A0%BC\">表格</a> </li>\n<li><a href=\"#%E8%A1%A8%E6%83%85\">表情</a></li>\n<li><a href=\"#diff%E8%AF%AD%E6%B3%95\">diff语法</a></li>\n</ul>\n<h3>横线</h3>\n<hr>\n<p>***、---、___可以显示横线效果</p>\n<hr>\n<hr>\n<hr>\n<h2>标题</h2>\n<h1>一级标题</h1>\n<h2>二级标题</h2>\n<h3>三级标题</h3>\n<h4>四级标题</h4>\n<h5>五级标题</h5>\n<h6>六级标题</h6>\n<h2>文本</h2>\n<h3>普通文本</h3>\n<p>这是一段普通的文本</p>\n<h3>单行文本</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Hello,大家好，我是果冻虾仁。</code></pre></div>\n<p>在一行开头加入1个Tab或者4个空格。</p>\n<h3>文本块</h3>\n<h4>语法1</h4>\n<p>在连续几行的文本开头加入1个Tab或者4个空格。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">欢迎到访\n很高兴见到您\n祝您，早上好，中午好，下午好，晚安</code></pre></div>\n<h4>语法2</h4>\n<p>使用一对各三个的反引号：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">欢迎到访\n我是C++码农\n你可以在知乎、CSDN、简书搜索【果冻虾仁】找到我</code></pre></div>\n<p>该语法也可以实现代码高亮，见<a href=\"#%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE\">代码高亮</a></p>\n<h3>文字高亮</h3>\n<p>文字高亮功能能使行内部分文字高亮，使用一对反引号。\n语法：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">`linux` `网络编程` `socket` `epoll` </code></pre></div>\n<p>效果：<code class=\"language-text\">linux</code> <code class=\"language-text\">网络编程</code> <code class=\"language-text\">socket</code> <code class=\"language-text\">epoll</code></p>\n<p>也适合做一篇文章的tag</p>\n<h4>换行</h4>\n<p>直接回车不能换行，<br>\n可以在上一行文本后面补两个空格，<br>\n这样下一行的文本就换行了。</p>\n<p>或者就是在两行文本直接加一个空行。</p>\n<p>也能实现换行效果，不过这个行间距有点大。</p>\n<h4>斜体、粗体、删除线</h4>\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">*斜体1*</code></td>\n<td><em>斜体1</em></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">_斜体2_</code></td>\n<td><em>斜体2</em></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">**粗体1**</code></td>\n<td><strong>粗体1</strong></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">__粗体2__</code></td>\n<td><strong>粗体2</strong></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">这是一个 ~~删除线~~</code></td>\n<td>这是一个 <del>删除线</del></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">***斜粗体1***</code></td>\n<td><strong><em>斜粗体1</em></strong></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">___斜粗体2___</code></td>\n<td><strong><em>斜粗体2</em></strong></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">***~~斜粗体删除线1~~***</code></td>\n<td><strong><em><del>斜粗体删除线1</del></em></strong></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">~~***斜粗体删除线2***~~</code></td>\n<td><del><strong><em>斜粗体删除线2</em></strong></del></td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">斜体、粗体、删除线可混合使用</code></pre></div>\n<h2>图片</h2>\n<p>基本格式：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">![alt](URL title)</code></pre></div>\n<p>alt和title即对应HTML中的alt和title属性（都可省略）：</p>\n<ul>\n<li>alt表示图片显示失败时的替换文本</li>\n<li>title表示鼠标悬停在图片时的显示文本（注意这里要加引号）</li>\n</ul>\n<p>URL即图片的url地址，如果引用本仓库中的图片，直接使用<strong>相对路径</strong>就可了，如果引用其他github仓库中的图片要注意格式，即：<code class=\"language-text\">仓库地址/raw/分支名/图片路径</code>，如：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://github.com/guodongxiaren/ImageCache/raw/master/Logo/foryou.gif</code></pre></div>\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code class=\"language-text\">![baidu](http://www.baidu.com/img/bdlogo.gif &quot;百度logo&quot;)</code></td>\n<td><img src=\"http://www.baidu.com/img/bdlogo.gif\" alt=\"baidu\" title=\"百度logo\"></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code class=\"language-text\">![][code-past]</code></td>\n<td><img src=\"https://img-blog.csdnimg.cn/201908060004034.png\"></td>\n</tr>\n</tbody>\n</table>\n<p>注意例2的写法使用了<strong>URL标识符</strong>的形式，在<a href=\"#%E9%93%BE%E6%8E%A5\">链接</a>一节有介绍。</p>\n<blockquote>\n<p>在文末有code-past的定义：</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[code-past]:https://img-blog.csdnimg.cn/201908060004034.png</code></pre></div>\n<h2>链接</h2>\n<h3>链接外部URL</h3>\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code class=\"language-text\">[我的博客](http://blog.csdn.net/guodongxiaren &quot;悬停显示&quot;)</code></td>\n<td><a href=\"http://blog.csdn.net/guodongxiaren\" title=\"悬停显示\">我的博客</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code class=\"language-text\">[我的知乎][zhihu]</code></td>\n<td><a href=\"https://www.zhihu.com/people/jellywong\" title=\"我的知乎，欢迎关注\">我的知乎</a></td>\n</tr>\n</tbody>\n</table>\n<p>语法2由两部分组成：</p>\n<ul>\n<li>第一部分使用两个中括号，[ ]里的标识符（本例中zhihu），可以是数字，字母等的组合，标识符上下对应就行了（<strong>姑且称之为URL标识符</strong>）</li>\n<li>第二部分标记实际URL。</li>\n</ul>\n<blockquote>\n<p>使用URL标识符能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。</p>\n<blockquote>\n<p>URL标识符是我起的名字，不知道是否准确。囧。。</p>\n</blockquote>\n</blockquote>\n<h3>链接本仓库里的URL</h3>\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">[我的简介](/example/profile.md)</code></td>\n<td><a href=\"/example/profile.md\">我的简介</a></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">[example](./example)</code></td>\n<td><a href=\"./example\">example</a></td>\n</tr>\n</tbody>\n</table>\n<h3>图片链接</h3>\n<p>给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。<br>\n直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。</p>\n<table>\n<thead>\n<tr>\n<th>#</th>\n<th>语法</th>\n<th align=\"center\">效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><code class=\"language-text\">[![weibo-logo]](http://weibo.com/linpiaochen)</code></td>\n<td align=\"center\"><a href=\"http://weibo.com/linpiaochen\"><img src=\"/img/weibo.png\" alt=\"weibo-logo\" title=\"点击图片进入我的微博\"></a></td>\n</tr>\n<tr>\n<td>2</td>\n<td><code class=\"language-text\">[![](/img/zhihu.png &quot;我的知乎，欢迎关注&quot;)][zhihu]</code></td>\n<td align=\"center\"><a href=\"https://www.zhihu.com/people/jellywong\" title=\"我的知乎，欢迎关注\"><img src=\"/img/zhihu.png\" title=\"我的知乎，欢迎关注\"></a></td>\n</tr>\n<tr>\n<td>3</td>\n<td><code class=\"language-text\">[![csdn-logo]][csdn]</code></td>\n<td align=\"center\"><a href=\"http://blog.csdn.net/guodongxiaren\" title=\"我的博客\"><img src=\"/img/csdn.png\" alt=\"csdn-logo\" title=\"我的CSDN博客\"></a></td>\n</tr>\n</tbody>\n</table>\n<p>因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。<br>\n注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。</p>\n<blockquote>\n<p>本文URL标识符都放置于文末</p>\n</blockquote>\n<h3>锚点</h3>\n<p>其实呢，每一个标题都是一个锚点，和HTML的锚点（<code class=\"language-text\">#</code>）类似，比如我们 </p>\n<table>\n<thead>\n<tr>\n<th>语法</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">[回到顶部](#readme)</code></td>\n<td><a href=\"#readme\">回到顶部</a></td>\n</tr>\n</tbody>\n</table>\n<p>不过要注意，标题中的英文字母都被转化为<strong>小写字母</strong>了。</p>\n<blockquote>\n<p>以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！</p>\n</blockquote>\n<h2>列表</h2>\n<h3>无序列表</h3>\n<h4>语法</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">* 昵称：果冻虾仁\n- 别名：隔壁老王\n* 英文名：Jelly</code></pre></div>\n<h4>效果</h4>\n<ul>\n<li>昵称：果冻虾仁</li>\n<li>别名：隔壁老王</li>\n<li>英文名：Jelly</li>\n</ul>\n<h3>多级无序列表</h3>\n<h4>语法</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">* 编程语言\n    * 脚本语言\n        * Python</code></pre></div>\n<h4>效果</h4>\n<ul>\n<li>\n<p>编程语言</p>\n<ul>\n<li>\n<p>脚本语言</p>\n<ul>\n<li>Python</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>一级有序列表</h3>\n<h4>语法</h4>\n<p>就是在数字后面加一个点，再加一个空格。不过看起来起来可能不够明显。 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">面向对象的三个基本特征：\n\n1. 封装\n2. 继承\n3. 多态</code></pre></div>\n<h4>效果</h4>\n<p>面向对象的三个基本特征：</p>\n<ol>\n<li>封装</li>\n<li>继承</li>\n<li>多态</li>\n</ol>\n<h3>多级有序列表</h3>\n<p>和无序列表一样，有序列表也有多级结构。</p>\n<h4>语法</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 这是一级的有序列表，数字1还是1\n   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字\n      1. 这是三级的有序列表，数字在显示的时候变成了英文字母</code></pre></div>\n<h4>效果</h4>\n<ol>\n<li>\n<p>这是一级的有序列表，数字1还是1</p>\n<ol>\n<li>这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字</li>\n<li>这是三级的有序列表，数字在显示的时候变成了英文字母</li>\n</ol>\n</li>\n</ol>\n<h3>复选框列表</h3>\n<h4>语法</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- [x] 需求分析\n- [x] 系统设计\n- [x] 详细设计\n- [ ] 编码\n- [ ] 测试\n- [ ] 交付</code></pre></div>\n<h4>效果</h4>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 需求分析</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 系统设计</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> 详细设计</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 编码</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 测试</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 交付</li>\n</ul>\n<p>您可以使用这个功能来标注某个项目各项任务的完成情况。</p>\n<blockquote>\n<p>Tip:</p>\n<blockquote>\n<p>在GitHub的<strong>issue</strong>中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。</p>\n</blockquote>\n</blockquote>\n<h2>块引用</h2>\n<h3>常用于引用文本</h3>\n<h4>文本摘自《深入理解计算机系统》P27</h4>\n<p>　令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，其实对于哪种字节排序的选择都是任意的。</p>\n<blockquote>\n<p><strong>“端”（endian）的起源</strong><br>\n以下是Jonathan Swift在1726年关于大小端之争历史的描述：<br>\n“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”</p>\n</blockquote>\n<h3>块引用有多级结构</h3>\n<h4>语法</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; 数据结构\n&gt;&gt; 树\n&gt;&gt;&gt; 二叉树\n&gt;&gt;&gt;&gt; 平衡二叉树\n&gt;&gt;&gt;&gt;&gt; 满二叉树</code></pre></div>\n<h4>效果</h4>\n<blockquote>\n<p>数据结构</p>\n<blockquote>\n<p>树</p>\n<blockquote>\n<p>二叉树</p>\n<blockquote>\n<p>平衡二叉树</p>\n<blockquote>\n<p>满二叉树</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2>代码高亮</h2>\n<h3>语法</h3>\n<p>在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。</p>\n<h3>效果</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">//Java</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//C</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello GitHub\"</span> <span class=\"token comment\">#Bash</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myH1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token operator\">=</span><span class=\"token string\">\"Welcome to my Homepage\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//javascipt</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">string <span class=\"token operator\">&amp;</span><span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token comment\">//cpp</span></code></pre></div>\n<h2>表格</h2>\n<table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>表头1</th>\n<th>表头2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n<tr>\n<td>表格单元</td>\n<td>表格单元</td>\n</tr>\n</tbody>\n</table>\n<h3>对齐</h3>\n<p>表格可以指定对齐方式</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">左对齐</th>\n<th align=\"center\">居中</th>\n<th align=\"right\">右对齐</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">col 3 is</td>\n<td align=\"center\">some wordy text</td>\n<td align=\"right\">$1600</td>\n</tr>\n<tr>\n<td align=\"left\">col 2 is</td>\n<td align=\"center\">centered</td>\n<td align=\"right\">$12</td>\n</tr>\n<tr>\n<td align=\"left\">zebra stripes</td>\n<td align=\"center\">are neat</td>\n<td align=\"right\">$1</td>\n</tr>\n</tbody>\n</table>\n<h3>混合其他语法</h3>\n<p>表格单元中的内容可以和其他大多数GFM语法配合使用，如：  </p>\n<h4>使用普通文本的删除线，斜体等效果</h4>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Help</td>\n<td><del>Display the</del> help window.</td>\n</tr>\n<tr>\n<td>Close</td>\n<td><em>Closes</em> a window</td>\n</tr>\n</tbody>\n</table>\n<h4>表格中嵌入图片（链接）</h4>\n<p>其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。</p>\n<table>\n<thead>\n<tr>\n<th>图片</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"http://www.baidu.com/img/bdlogo.gif\" alt=\"baidu\" title=\"百度logo\"></td>\n<td>百度</td>\n</tr>\n</tbody>\n</table>\n<h2>表情</h2>\n<p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p>\n<p>比如<code class=\"language-text\">:blush:</code>，可以显示:blush:。</p>\n<p>具体每一个表情的符号码，可以查询GitHub的官方网页<a href=\"http://www.emoji-cheat-sheet.com\">http://www.emoji-cheat-sheet.com</a>。</p>\n<p>但是这个网页每次都打开<strong>奇慢</strong>。。所以我整理到了本repo中，大家可以直接在此查看<a href=\"./emoji.md\">emoji</a>。</p>\n<h2>diff语法</h2>\n<p>版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。\nGFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。</p>\n<h4>语法</h4>\n<p>其语法与代码高亮类似，只是在三个反引号后面写diff，\n并且其内容中，可以用 <code class=\"language-text\">+</code>开头表示新增，<code class=\"language-text\">-</code>开头表示删除。\n另外还有有 <code class=\"language-text\">!</code>和<code class=\"language-text\">#</code>的语法。</p>\n<h4>效果</h4>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token inserted-sign inserted\">+ 人闲桂花落，\n</span><span class=\"token deleted-sign deleted\">- 夜静春山空。\n</span><span class=\"token diff bold\">! 月出惊山鸟，\n</span># 时鸣春涧中。</code></pre></div>\n<hr>","frontmatter":{"date":"November 07, 2019","path":"/markdown/test","title":"Test MarkDown"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}